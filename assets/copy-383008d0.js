import{d as x,q as f,A as c,_ as m,y as B,o,x as k,w as a,g as n,k as l,j as s,z as d,f as r,i as A,p as D,E as b}from"./index-eb619e6a.js";const C=x({setup(){const e=f({text:"风和自由",text1:"诗和远方"});return{callback:()=>{c.warning("复制成功！"+e.text1)},callback1:()=>{c.warning("复制成功！callback1")},inputs:e}}}),y={class:"grid grid-c-3"};function V(e,u,F,w,g,z){const v=A,p=D,E=b,i=B("copy");return o(),k(E,{shadow:e.defaultData.cardShadow},{default:a(()=>[n(v),u[9]||(u[9]=l("div",{class:"tipBox warning",style:{"font-size":"15px"}},[l("p",null,"复制成功后所执行的函数，为指令初始化时所绑定的函数"),l("p",null,[s(" 例如： "),l("span",{class:"code"},'v-copy="[ inputs.text1, bol ? callback : callback1 ]'),s(" 假设 "),l("span",{class:"code"},"bol"),s(" 为 "),l("span",{class:"code"},"true"),s(" 那么只会执行 "),l("span",{class:"code"},"callback"),s("， 就算 "),l("span",{class:"code"},"bol"),s(" 在之后变为 "),l("span",{class:"code"},"false"),s(" 也只会执行 "),l("span",{class:"code"},"callback")])],-1)),l("div",y,[l("div",null,[u[4]||(u[4]=l("div",{class:"tipBox"},[s(" 基础   "),l("div",{style:{"font-size":"13px",color:"var(--el-color-info)"}},' v-copy="inputs.text" ')],-1)),n(p,{modelValue:e.inputs.text,"onUpdate:modelValue":u[0]||(u[0]=t=>e.inputs.text=t),placeholder:""},{append:a(()=>[d((o(),r("span",null,u[3]||(u[3]=[s("复制")]))),[[i,e.inputs.text]])]),_:1},8,["modelValue"])]),l("div",null,[u[6]||(u[6]=l("div",{class:"tipBox"},[s(" 数组式   "),l("div",{style:{"font-size":"13px",color:"var(--el-color-info)"}},' v-copy="[inputs.text]" ')],-1)),n(p,{modelValue:e.inputs.text,"onUpdate:modelValue":u[1]||(u[1]=t=>e.inputs.text=t),placeholder:""},{append:a(()=>[d((o(),r("span",null,u[5]||(u[5]=[s("复制")]))),[[i,[e.inputs.text]]])]),_:1},8,["modelValue"])]),l("div",null,[u[8]||(u[8]=l("div",{class:"tipBox"},[s(" 数组式（自定义复制成功后执行的函数） "),l("div",{style:{"font-size":"13px",color:"var(--el-color-info)"}},' v-copy="[inputs.text1, callback]" ')],-1)),n(p,{modelValue:e.inputs.text1,"onUpdate:modelValue":u[2]||(u[2]=t=>e.inputs.text1=t),placeholder:""},{append:a(()=>[d((o(),r("span",null,u[7]||(u[7]=[s("复制")]))),[[i,[e.inputs.text1,e.inputs.text1=="诗和远方"?e.callback:e.callback1]]])]),_:1},8,["modelValue"])])])]),_:1,__:[9]},8,["shadow"])}const N=m(C,[["render",V]]);export{N as default};
